################################################################################
# C/C++ rules

rule compile_c
  command = gcc ${opts_c} ${includes} ${defines} -MMD -MF ${out}.d -c ${in} -o ${out}
  depfile = ${out}.d
  deps = gcc

rule compile_cpp
  command = g++ ${opts_cpp} ${includes} ${defines} -MMD -MF ${out}.d -c ${in} -o ${out}
  depfile = ${out}.d
  deps = gcc

rule check_cpp
  command = g++ ${opts_cpp} ${includes} ${defines} -MMD -MF ${out}.d -fsyntax-only -c ${in} && touch ${out}
  depfile = ${out}.d
  deps = gcc

rule c_binary
  command = g++ ${opts_ld} ${in} ${libraries} -o ${out}

rule c_library
  command = ar rcs ${out} ${in}

################################################################################
# Emscripten rules

rule ems_compile_c
  command = emcc ${opts_ems} ${includes} ${defines} -MMD -MF ${out}.d -c ${in} -o ${out}
  depfile = ${out}.d
  deps = gcc

rule ems_compile_cpp
  command = emcc ${ems_opts_cpp} ${includes} ${defines} -MMD -MF ${out}.d -c ${in} -o ${out}
  depfile = ${out}.d
  deps = gcc

rule ems_js_binary
  command = emcc ${ems_opts_ld} ${in} ${libraries} -o ${out}

################################################################################
# Generic rules

rule run_command
  command = $command

rule run_test
  command = ${in} | grep "All tests pass" && touch ${out}

rule metron
  command = symlinks/metron/bin/metron -q -v -e -c ${in} -o ${out}

rule metron2
  command = symlinks/metron/bin/metron -q -v -e -c ${in} -o ${out}
  depfile = ${out}.d
  deps = gcc

rule make
  command = make --quiet -C $$(dirname ${in}) -f $$(basename ${in}) > /dev/null

################################################################################
# FPGA synthesis rules

# FIXME verilator isn't obeying lint-off WIDTHTRUNC etc
rule verilator
  command = verilator -Wno-width --public ${includes} --cc ${in} -Mdir $$(set -- ${out}; dirname $$1)

rule verilator_lint
  command = verilator -Wno-width ${includes} --lint-only ${in}

rule iverilog
  command = iverilog -g2012 ${defines} ${includes} ${in} -o ${out}

rule yosys
  command = yosys -q -p 'read_verilog ${includes} -sv ${in}; dump; synth_ice40 -json ${out};'
#  command = yosys -p 'read_verilog ${includes} -sv ${in}; dump; synth_ice40 -json ${out};'

rule yosys_noisy
  command = yosys -p 'read_verilog ${includes} -sv ${in}; dump; synth_ice40 -json ${out};'

rule yosys_check
  command = yosys -q -p 'read_verilog ${includes} -sv ${in}; dump;'
#  command = yosys -p 'read_verilog ${includes} -sv ${in};'

rule nextpnr-ice40
  command = nextpnr-ice40 ${flags} -q --${chip} --package ${package} --json ${in} --asc ${out} --pcf ${pcf}

rule icepack
  command = icepack ${in} ${out}

rule sv2v
  command = symlinks/sv2v/bin/sv2v ${includes} ${in} -w ${out}

################################################################################
# Rules for converting elf sections into hex files for synthesis

rule elf_to_code_hex
  command = riscv64-unknown-elf-objcopy -O binary ${in} ${out} -j .init -j .text --change-addresses -${base_address}

rule elf_to_hex
  command = symlinks/metrolib/bin/elf_to_hex ${in}

#%.text.bin: %.elf
#	riscv64-unknown-elf-objcopy -O binary $< $@ -j .init -j .text --change-addresses -0x400000
#
#%.data.bin: %.elf
#	riscv64-unknown-elf-objcopy -O binary $< $@ -j .data -j .eh_frame -j .fini_array -j .init_array --change-addresses -0x80000000
#
#%.vh: %.bin
#	srec_cat $< -binary -byte-swap 4 -O $@ -VMem 32

################################################################################
